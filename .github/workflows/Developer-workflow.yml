name: Build and Deploy for Development project
on:
  push:
    path:
      - 'Backend/**'
      - 'Frontend/**'
    branches-ignore:
      - 'main'
env:
  REACT_APP_API_KEY: ${{ secrets.DEV_REACT_APP_API_KEY }}
  REACT_APP_AUT_DOMAIN: ${{ secrets.DEV_REACT_APP_AUT_DOMAIN }}
  REACT_APP_PROJECT_ID: ${{ secrets.DEV_REACT_APP_PROJECT_ID }}
  REACT_APP_STORGE_BUCKET: ${{ secrets.DEV_REACT_APP_STORGE_BUCKET }}
  REACT_APP_MESSAGE_SENDER_ID: ${{ secrets.DEV_REACT_APP_MESSAGE_SENDER_ID }}
  REACT_APP_APP_ID: ${{ secrets.DEV_REACT_APP_APP_ID }}
  REACT_APP_MEASERUMENT_ID: ${{ secrets.DEV_REACT_APP_MEASERUMENT_ID }}
jobs:
  Build-And-Deploy-Backend-Dev:
    name: Build and Deploy Backend to Development Project if changes were made
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Looking for changes to the Backend
        uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref }}
          filters: |
              backend:
                - 'Backend/**'
      - name: Is Backend Changed?
        if: steps.changes.outputs.backend == 'true'
        run: echo "Changes were made to the backend"
  Build-And-Deploy-Frontend-Dev:
    name: Build and Deploy Frontend to Development Project if changes were made
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2
      - name: Looking for changes to the Frontend
        uses: dorny/paths-filter@v2
        id: changes
        with:
          base: ${{ github.ref }}
          filters: |
              frontend:
                - 'Frontend/**'
      - name: 'If Frontend Changed: Install dependecies and run build'
        if: steps.changes.outputs.frontend == 'true'
        run: npm ci && npm run build
        working-directory: ./Frontend
      - name: 'If Frontend Changed: Deploy to Firebase'  
        if: steps.changes.outputs.frontend == 'true'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_CHURNR_SYSTEM_DEVELOPMENT }}'
          channelId: live
          projectId: churnr-system-development


